==============================================================================================
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[spAddEmployee]     
(   
	@Name VARCHAR(20),     
    @Email VARCHAR(20),    
    @Password VARCHAR(20),    
    @PhoneNumber VARCHAR(10),
	@id int OUTPUT
)    
as     
BEGIN
	BEGIN TRANSACTION
		SAVE TRANSACTION savePoint 
		BEGIN TRY
			IF EXISTS (SELECT Email FROM tblEmployee WHERE Email = @Email)
				PRINT 'NO SUCH EMAIL EXIST';
			ELSE
				BEGIN
					INSERT INTO tblEmployee (Name,Email,Password, PhoneNumber)     
						VALUES (@Name,@Email,@Password, @PhoneNumber);	
					COMMIT TRANSACTION
					SET @id=SCOPE_IDENTITY()
					RETURN @id
				END
		End TRY
		Begin catch
			SELECT ERROR_MESSAGE() AS ErrorMsg
			IF @@TRANCOUNT > 0
				BEGIN
					ROLLBACK TRANSACTION savePoint
				END
		End CATCH
End
===========================================================================================
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[spDeleteEmployee]     
(      
   @EmpId int      
)      
as       
BEGIN
	BEGIN TRANSACTION
		SAVE TRANSACTION savePoint 
		BEGIN TRY
			IF NOT EXISTS (SELECT * FROM tblEmployee WHERE Id=@EmpId)
				PRINT 'NO SUCH EMPLOYEE ID EXIST ';
			ELSE
				BEGIN
					DELETE FROM tblEmployee WHERE Id=@EmpId	
					COMMIT TRANSACTION
				END
		End TRY
		Begin catch
			SELECT ERROR_MESSAGE() AS ErrorMsg
			IF @@TRANCOUNT > 0
				BEGIN
					ROLLBACK TRANSACTION savePoint
				END
		End CATCH
End

========================================================================================
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[spGetAllEmployees]    
as    
BEGIN
	BEGIN TRANSACTION
		SAVE TRANSACTION savePoint 
		BEGIN TRY
			IF NOT EXISTS (SELECT * FROM tblEmployee)
				PRINT 'NO RECORD FOUND'
			ELSE
				BEGIN
					SELECT * FROM tblEmployee;
					COMMIT TRANSACTION
				END
		End TRY
		Begin catch
			SELECT ERROR_MESSAGE() AS ErrorMsg
			IF @@TRANCOUNT > 0
				BEGIN
					ROLLBACK TRANSACTION savePoint
				END
		End CATCH
End
=======================================================================
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[spGetEmployeeById]     
(      
   @EmpId int      
)      
as       
BEGIN
	BEGIN TRANSACTION
		SAVE TRANSACTION savePoint 
		BEGIN TRY
			IF NOT EXISTS (SELECT * FROM tblEmployee WHERE Id=@EmpId)
				PRINT 'NO SUCH EMPLOYEE ID EXIST';
			ELSE
				BEGIN
					SELECT * FROM tblEmployee WHERE Id=@EmpId;
					COMMIT TRANSACTION
				END
		End TRY
		Begin catch
			SELECT ERROR_MESSAGE() AS ErrorMsg
			IF @@TRANCOUNT > 0
				BEGIN
					ROLLBACK TRANSACTION savePoint
				END
		End CATCH
End
===============================================================================
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[spUpdateEmployee]      
(      
   @EmpId INTEGER ,    
   @Name VARCHAR(20),     
   @Email VARCHAR(20),    
   @Password VARCHAR(20),    
   @PhoneNumber VARCHAR(10)    
)      
as      
BEGIN
	BEGIN TRANSACTION
		SAVE TRANSACTION savePoint 
		BEGIN TRY
			IF NOT EXISTS (SELECT * FROM tblEmployee WHERE Id=@EmpId)
				PRINT 'NO SUCH EMPLOYEE ID EXIST';
			ELSE
				BEGIN
					UPDATE tblEmployee       
					SET Name=@Name,      
					Email=@Email,      
					Password=@Password,    
					PhoneNumber=@PhoneNumber WHERE Id=@EmpId;	
					COMMIT TRANSACTION
				END
		End TRY
		Begin catch
			SELECT ERROR_MESSAGE() AS ErrorMsg
			IF @@TRANCOUNT > 0
				BEGIN
					ROLLBACK TRANSACTION savePoint
				END
		End CATCH
End